@startuml

title Facebook App -  Class Diagram

interface IXmlSerializable {
    +ReadXml(XmlReader reader): void
    +WriteXml(XmlWriter writer): void
}

class FormMain extends Form {
}

class UserPaths {
    +constructor(User i_User)
    +UserSettingsPath: string {getter}
    +PostFiltersPath: string {getter}
    +CannedPostsDirectory: string {getter}
}

FormMain "1" *-right- "1" UserPaths: Gets the paths for all\nthe persisted information\nfor the logged in user
FormMain "1" *-left- "1" User: Holds the currently\nlogged in user
FormMain "1" *-left- "*" Post
FormMain "1" *-left- "*" Event
FormMain "1" *-left- "*" Checkin

package "Post Filtering Feature" <<Frame>> {

    class PostFilterGroup implements IXmlSerializable{
        +Name: string
        +Enabled: bool
        +Priority: ePostPriority
        +PostFilters: IList<IPostFilter>
        +IsMatch(Post): bool
    }

    class FormFilterSettings extends Form {
        PostFilterGroups : List<PostFilterGroup>
    }

    FormFilterSettings "1" *-down- "*" PostFilterGroup
    FormMain -down- FormFilterSettings: Shown when [Filter Settings...]\nis clicked
    
    class AddNewGroupForm extends Form {
        NewFilterGroup: PostFilterGroup
    }
    
    class FormEditFilterGroup extends Form {
        FilterGroup: PostFilterGroup
    }
    
    FormFilterSettings -down- AddNewGroupForm: Shown when creating a new filter group
    FormFilterSettings -down- FormEditFilterGroup: shown when editing a filter group

    enum ePostPriority {
        Hidden
        Demoted
        Promoted
    }

    interface IPostFilter {
        Enabled: bool
        IsMatch(Post): bool
    }


    class RegexPostFilter implements IPostFilter {
        +Expression: Regex
    }

    PostFilterGroup -right- ePostPriority: priority to set the post when matched
    PostFilterGroup "1" *-down- "*" IPostFilter: filters to use to determain if post applies to group
    FormMain "1" *-down- "*" PostFilterGroup: All the groups that will be used for filtering

}

package "Canned Post Feature" <<Frame>> {

    class PostInfo {
        StatusText: string
    }

    class PostTemplate implements IXmlSerializable {
        +Name: string
        +DynamicSections: IDictionary<string, DynamicTextSection>
        -Sections: IEnumerable<ITemplateSection>
        +Compile(): PostInfo
    }

    interface ITemplateSection {
        +Value: string {getter}
    }

    class StaticTextSection implements ITemplateSection {
        +Value: string {getter}
        +constructor(string i_Value)
    }

    class DynamicTextSection implements ITemplateSection {
        +Value: string {getter, setter}
    }

    PostTemplate -down- PostInfo: Compiles to
    PostTemplate "1" *-down- "*" ITemplateSection: status text is composed of
}

@enduml